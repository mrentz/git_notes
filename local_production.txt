ActiveRecord::NoDatabaseError (FATAL:  role "video-store" does not exist
PG::ConnectionBad (FATAL:  Peer authentication failed for user "video-store"
ActiveRecord::NoDatabaseError (FATAL:  database "video-store_production" does not exist

$createuser video-store
$psql
user#ALTER USER "video-store" WITH SUPERUSER;
user#   (ctrl d) (exit psql)
rails db:create RAILS_ENV=production
rails db:migrate RAILS_ENV=production

$rake assets:precompile RAILS_ENV=production
$rails s -e production

check to make sure assets are being served from the public directory
Ruby on Rails-Railscasts PRO #341 (3:00min mark)

#<RuntimeError: Missing `secret_key_base` for 'production' environment, set this value in `config/secrets.yml`>

https://stackoverflow.com/questions/23180650/how-to-solve-error-missing-secret-key-base-for-production-environment-rails

***********************************************************************8

PostgreSQL Database: PG::ConnectionBad: FATAL: Peer authentication failed for user
	

If, when working on a Linux machine of the Ubuntu flavor and setting up a PostgreSQL 9.3 database, you run into the error ‘PG::ConnectionBad: FATAL: Peer authentication failed for user’ when trying to connect to a database from a web application (Rails, PHP, Node, etc.), you are more than likely running into local socket connection permissions within PostgreSQL. The most common fix for this error in a development or staging environment is to loosen the local permissions up a bit.

How To:
1. locate the file ‘/etc/postgresql/9.3/main/pg_hba.conf’ and open it using sudo (sudo nano /etc/postgresql/9.3/main/pg_hba.conf)
2. scroll down through the file (almost to the bottom) until you find the section that starts with ‘# Database administrative login by Unix domain socket
3. directly below that you will find ‘local all all peer’ change it to ‘local all all trust’
4. save and close the file
5. restart the PostgreSQL server (sudo service postgresql restart)
